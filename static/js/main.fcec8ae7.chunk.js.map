{"version":3,"sources":["images/logo.svg","components/startScreen.jsx","components/roundScreen.jsx","components/endScreen.jsx","components/safetyBar.jsx","components/naughtyBar.jsx","components/rewardBar.jsx","components/bugGuidance.jsx","images/virusyellow-1-250-min.png","images/virusorange-1-250-min.png","images/virusred-1-250-min.png","images/virusyellow-2-250-min.png","images/virusorange-2-250-min.png","images/virusred-2-250-min.png","images/virusunknown-250-min.png","components/gameScreen.jsx","sounds/laser1.mp3","sounds/phit.mp3","sounds/music.mp3","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","messagePool","startGame","className","id","style","fontSize","fontWeight","marginTop","marginBottom","String","introMessages","split","map","p","i","trim","length","onClick","width","zIndex","backgroundImage","logo","backgroundRepeat","backgroundPosition","RoundScreen","roundScores","nextRound","currentRound","bugScore","r","bugs","reduce","a","b","timeLasted","Math","floor","time","complete","EndScreen","restartGame","outroMessages","SafetyBar","getSafeTarget","filter","treated","progressSafeTarget","getTarget","progressTarget","position","display","height","backgroundColor","opacity","left","boxSizing","progress","NaughtyBar","extraTime","maxExtraTime","justifyContent","border","bottom","RewardBar","rewardCount","BugGuidance","bugimages","currentTreatment","setCurrentTreatment","flexDirection","alignItems","src","alt","r2label1Messages","r2label2Messages","r3label1Messages","class","r3label2Messages","r3label3Messages","r4label1Messages","r4label2Messages","r4label3Messages","r4label4Messages","color","GameScreen","laser1","phit","music","stop","isPlaying","sound","bugSettings","setRewardCount","setExtraTime","squashed","setSquashed","soundOn","setBugs","timer","score","setScore","yellow1","virusyellow1","red1","virusred1","orange1","virusorange1","yellow2","virusyellow2","red2","virusred2","orange2","virusorange2","grey","virusunknown","timeToRise","handleMouseUp","e","preventDefault","newBugs","parseInt","target","newSquashed","push","Date","now","cured","newExtraTime","handleMouseLeave","handleMouseDown","treatable","s","timeTreated","requestRef","useRef","lastCheckRef","bugCheck","newbugs","current","newBugPosition","ceil","random","every","abs","x","y","overlapCheck","colorRand","yellow","appearanceProb","red","orange","newBug","timeAppeared","timeToStayUp","state","variant","missedCount","timeSquashed","useEffect","setInterval","clearInterval","calcHeight","startState","console","log","handleUserKeyPress","keyCode","window","addEventListener","removeEventListener","disabled","onTouchCancel","onTouchEnd","onTouchStart","onMouseDown","onMouseUp","onMouseLeave","onContextMenu","overflow","backgroundSize","parse","require","App","ReactGA","initialize","pageview","location","pathname","search","useSound","laser1Sfx","phitSfx","musicSfx","useState","setCurrentRound","setRoundScores","setSoundOn","gameState","setGameState","timerStart","setTimerStart","setTimer","setMessagePool","setBugSettings","timeout","newScores","setTimeout","clearTimeout","messages","parser","delimiter","on","record","read","type","err","error","message","fetch","then","response","text","csvdata","data","forEach","d","write","loadMessageData","end","displayGameState","VolumeUp","VolumeOff","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcec8ae7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c1ccbc7f.svg\";","import ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n\n\n\n\nconst StartScreen = (props) => {\n\n  const {messagePool, startGame} = props\n\n\n  return (\n   <> \n         <h1 className=\"title\">BASH THE BACTERIA</h1>\n         <div id=\"instructions\" style={{\n           fontSize: \"0.9em\"\n         }}>\n         <p style={{\n      fontWeight: 700,\n      marginTop: \"0.25em\",\n      marginBottom: \"0.5em\"\n\n    }}>INSTRUCTIONS</p>\n\n{String(messagePool.introMessages[0][0]).split(\"<<\").map ( (p, i) =>\n    \n\n    p.trim().length > 0 ? \n       <ReactMarkdown key={i}>{p}</ReactMarkdown> : \"\")}\n\n</div>\n    <div onClick={startGame} className=\"startButton\" ><span>START</span></div>\n          \n    <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n    </>\n   \n  )\n}\n\nexport default StartScreen","import ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n\nconst RoundScreen = (props) => {\n\n  const {roundScores, messagePool, nextRound, currentRound } = props\n\n  const bugScore = () => {\n    return roundScores.map (r => r.bugs).reduce((a, b) => a + b, 0)\n  }\n\n  const timeLasted = () => {\n    return Math.floor(roundScores.map (r => r.time).reduce((a, b) => a + b, 0))\n  }\n\n  const successFail = () => {\n    if (currentRound === 1 || roundScores[currentRound-2].complete ) {\n      return \"Success\"\n    } else {\n      return \"Fail\"\n    }\n  }\n  return (\n   \n  messagePool ? <>\n         <h1>BASH THE BACTERIA</h1>\n\n   <p id=\"initialEndScore\">Round {currentRound}</p>\n   {String(messagePool[`round${currentRound}${successFail()}Messages`][0][0]).split(\"<<\").map ( (p, i) =>\n    \n\n    p.trim().length > 0 ? \n       <ReactMarkdown key={i}>{p}</ReactMarkdown> : \"\")}\n       {currentRound > 1 ? \n       <div id=\"scores\">\n      <div className=\"scoreLine\">\n     <div className=\"scoreName\">Time score:</div>\n     <div className=\"scoreText\">{timeLasted()} seconds * 10 = {timeLasted() * 10} points!</div>\n  </div>\n  <div className=\"scoreLine\">\n     <div className=\"scoreName\">Bacteria score:</div>\n     <div className=\"scoreText\">{bugScore()} treated * 10 = {bugScore() * 10} points!</div>\n    </div>\n\n    <div className=\"scoreLine\">\n     <div className=\"scoreName\">Total score:</div>\n     <div className=\"scoreText\">{timeLasted() * 10 + bugScore() * 10} points!</div>\n    </div>\n    </div>\n\n      : \"\" }\n   <div onClick={nextRound}  className=\"startButton endButton\" ><span>START ROUND</span></div>\n   <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n   \n   </>\n   \n   \n   : \"\"\n   \n  )\n}\n\nexport default RoundScreen","import ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n\nconst EndScreen = (props) => {\n\n  const {roundScores, messagePool, restartGame} = props\n\n  const bugScore = () => {\n    return roundScores.map (r => r.complete).reduce((a, b) => a + b, 0)\n  }\n\n  const timeLasted = () => {\n    return Math.floor(roundScores.map (r => r.time).reduce((a, b) => a + b, 0))\n  }\n\n  return (\n   \n  messagePool ? <>\n         <h1>BASH THE BACTERIA</h1>\n\n   <p id=\"initialEndScore\">You completed {roundScores.map (r => r.complete).reduce((a, b) => a + b, 0)} out of 4 rounds and lasted {timeLasted()} seconds!</p>\n   <div id=\"scores\">\n      <div className=\"scoreLine\">\n     <div className=\"scoreName\">Time score:</div>\n     <div className=\"scoreText\">{timeLasted()} seconds * 10 = {timeLasted() * 10} points!</div>\n  </div>\n  <div className=\"scoreLine\">\n     <div className=\"scoreName\">Bacteria score:</div>\n     <div className=\"scoreText\">{bugScore()} treated * 10 = {bugScore() * 10} points!</div>\n    </div>\n\n    <div className=\"scoreLine scoreLineF\">\n     <div className=\"scoreName\">Final score:</div>\n     <div className=\"scoreText\">{timeLasted() * 10 + bugScore() * 10} points!</div>\n    </div>\n    </div>\n\n  \n   \n\n   {String(messagePool.outroMessages[0][0]).split(\"<<\").map ( (p, i) =>\n    \n\n    p.trim().length > 0 ? \n       <ReactMarkdown key={i}>{p}</ReactMarkdown> : \"\")}\n   \n   <div onClick={restartGame}  className=\"startButton endButton\" ><span>RESTART GAME</span></div>\n   <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n   \n   </>\n   \n   \n   : \"\"\n   \n  )\n}\n\nexport default EndScreen","const SafetyBar = (props) => {\n\n  const {bugs} = props\n  \n  const progressWidth = () => {\n    if (bugs.filter(b => b.treated)[0] && bugs.filter(b => b.treated)[0].progress > bugs.filter(b => b.treated)[0].progressTarget) {\n      return bugs.filter(b => b.treated)[0].progressTarget\n    } else\n    if (bugs.filter(b => b.treated)[0]) {\n      return bugs.filter(b => b.treated)[0].progress\n    } else {\n      return 0\n    }\n  }\n\n  const overflowWidth = () => {\n    if (bugs.filter(b => b.treated)[0] && bugs.filter(b => b.treated)[0].progress > 0.5) {\n      return 0.5 - bugs.filter(b => b.treated)[0].progressTarget\n    } else\n    if (bugs.filter(b => b.treated)[0] && bugs.filter(b => b.treated)[0].progress > bugs.filter(b => b.treated)[0].progressTarget) {\n      return bugs.filter(b => b.treated)[0].progress - bugs.filter(b => b.treated)[0].progressTarget\n    } else {\n      return 0\n    }\n  }\n  const getSafeTarget = () => {\n    if (bugs.filter(b => b.treated)[0]) {\n      return bugs.filter(b => b.treated)[0].progressSafeTarget\n    } else {\n      return 0\n    }\n  }\n\n  const getTarget = () => {\n    if (bugs.filter(b => b.treated)[0]) {\n      return bugs.filter(b => b.treated)[0].progressTarget\n    } else {\n      return 0\n    }\n  }\nreturn (\n  <div id=\"progress\"\n      style={{\n        position: \"relative\",\n        display: \"flex\",\n        height: \"1em\",\n        width: \"100%\",\n        backgroundColor:  \"white\",\n        opacity: bugs.filter(b => b.treated)[0] ? 1 : 0\n      }}>\n         <div id=\"safetyBar\" style={{\n            height: \"100%\",\n            position: \"absolute\",\n            left: 200 * getSafeTarget() + \"%\",\n            boxSizing: \"border-box\",\n            backgroundColor: \"green\",\n            width: 200 * (getTarget() - getSafeTarget()) + \"%\",\n            zIndex: 5\n\n        }}\n        ></div>\n        <div id=\"safetyBar\" style={{\n            height: \"100%\",\n            position: \"absolute\",\n            left: 200 * getSafeTarget() + \"%\",\n            boxSizing: \"border-box\",\n            backgroundColor: \"green\",\n            width: 200 * (getTarget() - getSafeTarget()) + \"%\",\n            zIndex: 5\n\n        }}\n        >\n        </div>\n        <div id=\"progressbar\" style={{\n            height: \"100%\",\n            backgroundColor: \"black\",\n            width: 200 * progressWidth() + \"%\",\n            zIndex: 10\n        }}\n        >\n        </div>\n      <div id=\"overflowbar\" style={{\n            height: \"100%\",\n            position: \"absolute\",\n            left: 200 * getTarget() + \"%\",\n            boxSizing: \"border-box\",\n            backgroundColor: \"red\",\n            width: 200 * overflowWidth() + \"%\",\n        }}\n        >\n        </div>\n      </div>\n)\n      }\n\nexport default SafetyBar","const NaughtyBar = (props) => {\n\n  const {extraTime,maxExtraTime} = props\n  const naughtyWidth = () => {\n    if (extraTime > maxExtraTime) {\n      return maxExtraTime\n    } else {\n      return extraTime/maxExtraTime\n    }\n  }\nreturn (\n  <div id=\"naughtybar\"\n        \n  style={{\n    display: \"flex\",\n    backgroundColor:  \"white\",\n    justifyContent: \"end\",\n    boxSizing: \"border-box\",\n    border:\"1px black solid\"\n  }}\n\n  ><div id=\"naughtyprogressbar\" style={{\n      position: \"absolute\",\n      width: \"100%\",\n      backgroundColor: \"red\",\n      height: 100 * naughtyWidth() + \"%\",\n      bottom: 0\n  }}\n  >\n  </div></div>\n)\n      }\n\nexport default NaughtyBar","const RewardBar = (props) => {\n\n  const {rewardCount} = props\n  const rewardWidth = () => {\n    if (rewardCount > 5) {\n      return 1\n    } else {\n      return rewardCount/5\n    }\n  }\nreturn (\n  <div id=\"rewardbar\"\n        \n  style={{\n    display: \"flex\",\n    backgroundColor:  \"white\",\n    justifyContent: \"end\",\n    boxSizing: \"border-box\",\n    border:\"1px black solid\"\n  }}\n\n  ><div id=\"rewardprogressbar\" style={{\n      position: \"absolute\",\n      width: \"100%\",\n      backgroundColor: \"green\",\n      height: 100 * rewardWidth() + \"%\",\n      bottom: 0\n  }}\n  >\n  </div></div>\n)\n      }\n\nexport default RewardBar","const BugGuidance = (props) => {\n\n  const {messagePool, bugimages,currentRound, currentTreatment,setCurrentTreatment} = props\n\n  const getBoxes = () => {\n    if (currentRound < 3) {\n      return <>\n      <div id=\"allowed\" style={{\n        width: \"30%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"yellow1\"]} alt=\"\" />\n        <p className=\"label\">{messagePool.r2label1Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n\n\n      <div id=\"notallowed\"\n      \n      style={{\n        width: \"30%\",\n        border: \"1px white solid\"\n      }}\n      >\n        <p>UNTREATABLE</p>\n\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n        <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"red1\"]} alt=\"\" />\n\n      \n                <p className=\"label\">{messagePool.r2label2Messages[0][0]}</p>\n      \n      </div>\n      </div>\n      </>\n    } else\n    if (currentRound === 3) {\n      return <>\n      <div id=\"allowed\" style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"yellow1\"]} alt=\"\" />\n        <p className=\"label\">{messagePool.r3label1Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n\n      <div id=\"allowed2\" style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"red1\"]} alt=\"\" />\n        <p class=\"label\">{messagePool.r3label2Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n\n\n      <div id=\"notallowed\"\n      \n      style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n      }}\n      >\n        <p>AVOID THESE</p>\n\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n        <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"orange1\"]} alt=\"\" />\n\n      \n                <p className=\"label\">{messagePool.r3label3Messages[0][0]}</p>\n      \n      </div>\n      </div>\n      </>\n    } else\n    if (currentRound === 4) {\n      return <>\n      <div id=\"allowed\" style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"yellow1\"]} alt=\"\" />\n        <p className=\"label\">{messagePool.r4label1Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n\n      <div id=\"allowed2\" style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"red1\"]} alt=\"\" />\n        <p className=\"label\">{messagePool.r4label2Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n      <div id=\"allowed3\" style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n        \n      }}>\n        <p>TREAT THESE</p>\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n   <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"orange1\"]} alt=\"\" />\n        <p className=\"label\">{messagePool.r4label3Messages[0][0]}</p>\n        \n    \n      </div>\n\n      </div>\n\n\n      <div id=\"notallowed\"\n      \n      style={{\n        width: \"20%\",\n        border: \"1px white solid\"\n      }}\n      >\n        <p>AVOID THESE</p>\n\n        <div style={{ display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",}}\n      >\n        <img style={{\n          width: \"40%\"\n        }} src={bugimages[\"grey\"]} alt=\"\" />\n\n      \n                <p className=\"label\">{messagePool.r4label4Messages[0][0]}</p>\n      \n      </div>\n      </div>\n      </>\n    }\n  }\nreturn (<div id=\"allowedornot\" style={{\n          position: 'absolute',\n          height: '150px',\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          width: \"100%\",\n        }}>\n\n         {getBoxes()}\n          { currentRound > 2 ? \n          <div onClick={()=> setCurrentTreatment(currentTreatment === 1 ? 2 : 1)}\n          \n            id=\"antibioticToggle\"\n            style={{\n            width: \"10%\",\n            height: \"100%\",\n            border: \"1px white solid\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            color: currentTreatment === 1 ? \"black\" : \"black\",\n            backgroundColor: currentTreatment === 1 ? \"yellow\" : \"lightyellow\",\n\n          }}>\n            <div style={{\n            width: \"100%\",\n            height: \"50%\"\n          }}><p>1</p></div>\n            <div\n            style={{\n              width: \"100%\",\n              height: \"50%\",\n              color: currentTreatment === 2 ? \"black\" : \"black\",\n              backgroundColor: currentTreatment === 2 ? \"red\" : \"rgb(250,128,114)\",\n\n            }}\n            ><p >2</p></div>\n\n          </div>\n          : \"\"}\n        </div>)\n\n          }\n\nexport default BugGuidance","export default __webpack_public_path__ + \"static/media/virusyellow-1-250-min.82c6230b.png\";","export default __webpack_public_path__ + \"static/media/virusorange-1-250-min.e390ef9e.png\";","export default __webpack_public_path__ + \"static/media/virusred-1-250-min.a67f86ef.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-2-250-min.482459b0.png\";","export default __webpack_public_path__ + \"static/media/virusorange-2-250-min.52c6da16.png\";","export default __webpack_public_path__ + \"static/media/virusred-2-250-min.7b4fa043.png\";","export default __webpack_public_path__ + \"static/media/virusunknown-250-min.70469fdd.png\";","import { useEffect, useRef} from 'react'\n\nimport SafetyBar from './safetyBar';\nimport NaughtyBar from './naughtyBar';\nimport RewardBar from './rewardBar';\nimport BugGuidance from './bugGuidance'\n\nimport virusyellow1 from './../images/virusyellow-1-250-min.png';\nimport virusorange1 from './../images/virusorange-1-250-min.png';\nimport virusred1 from './../images/virusred-1-250-min.png';\nimport virusyellow2 from './../images/virusyellow-2-250-min.png';\nimport virusorange2 from './../images/virusorange-2-250-min.png';\nimport virusred2 from './../images/virusred-2-250-min.png';\n\nimport virusunknown from './../images/virusunknown-250-min.png';\n\n\nconst GameScreen = (props) => {\n\n\n  const {laser1,phit,music,stop,isPlaying,sound,messagePool,currentRound, currentTreatment, setCurrentTreatment, maxExtraTime, bugSettings, rewardCount, setRewardCount, extraTime, setExtraTime, squashed,setSquashed, soundOn, bugs, setBugs, timer,score,setScore} = props\n  const progressMaxTime = 1000\n\n  const bugimages = {\n    yellow1: virusyellow1,\n    red1: virusred1,\n    orange1: virusorange1,\n    yellow2: virusyellow2,\n    red2: virusred2,\n    orange2: virusorange2,\n    grey: virusunknown\n  }\n\n  \n  const timeToRise = 500\n  const timeToFall = 1000\n  const timeToFallSquashed = 250\n\n  const handleMouseUp = (e) => {\n    e.preventDefault()\n    let newBugs = [...bugs]\n    let b = newBugs.filter(b => b.id === parseInt(e.target.id))[0]\n    if (b.progress >  b.progressSafeTarget) {\n      let newSquashed = [...squashed]\n      newSquashed.push([b.id, Date.now()])\n      setSquashed(newSquashed)\n\n      if (soundOn) laser1()\n      setScore(score + 1)\n      b.cured = true\n      let newExtraTime = (b.progress > 0.5 ? 0.5 : b.progress - b.progressTarget) * progressMaxTime * (1-b.progressTarget) \n      if (rewardCount + 1 >= 5) {\n        setRewardCount(0)\n        setExtraTime(extraTime - maxExtraTime/2 + newExtraTime < 0 ? 0 : extraTime - maxExtraTime/2 + newExtraTime )\n      } else {\n        setRewardCount(rewardCount + 1)\n        setExtraTime(extraTime + newExtraTime)\n\n      }\n    }\n    b.treated = false\n    setBugs(newBugs)\n  }\n\n  const handleMouseLeave = (e) => {\n    e.preventDefault()\n    let newBugs = [...bugs]\n    let b = newBugs.filter(b => b.id === parseInt(e.target.id))[0]\n    b.treated = false\n    setBugs(newBugs)\n  }\n  const handleMouseDown = (e) => {\n    e.preventDefault()\n    let newBugs = [...bugs]\n    let b = newBugs.filter(b => b.id === parseInt(e.target.id))[0]\n\n    if (b && bugSettings[b.color].treatable === 0 && !squashed.filter(s=> s[0] === parseInt(e.target.id))[0]) {\n      \n      let newSquashed = [...squashed]\n      newSquashed.push([parseInt(e.target.id), Date.now()])\n      setRewardCount(rewardCount - 1)\n      setSquashed(newSquashed)\n      if (soundOn) phit()\n      //setScore(score - 1)\n      setExtraTime(extraTime + maxExtraTime/10)\n    } else if (b && (bugSettings[b.color].treatable === currentTreatment || bugSettings[b.color].treatable === 3)) {\n    \n\n      if (!b.treated) b.timeTreated = Date.now()\n\n      b.treated = true\n    }\n    setBugs(newBugs)\n  }\n\n  const animateEvery = 1000/60\n\n  const requestRef = useRef()\n  const lastCheckRef = useRef(Date.now()-500)\n\n  const overlapCheck = (newBugPosition) => {\n    return bugs.every(b => \n      (Math.abs(b.x - newBugPosition[0]) > 15  && Math.abs(b.y - newBugPosition[1]) > 15)\n    )\n  }\n\n  \n  \n\n  const bugCheck = () => {\n\n    let newbugs = [...bugs]\n    \n    if (   Date.now() - lastCheckRef.current > 500 ) {\n      \n      let newBugPosition =  [Math.ceil(Math.random() * 75) + 12.5, Math.ceil(Math.random() * 75)+12.5]\n      if (overlapCheck(newBugPosition)) {\n        \n        if (newbugs.length === 0 || (newbugs.length < 4 && Math.random() > 0.5)) {\n          let safetyLength = 0.05\n          let target = 0.125 + 0.25 * Math.random()\n          let colorRand = Math.random()\n          let color = \"yellow\"\n          if (colorRand > bugSettings.yellow.appearanceProb && colorRand <= bugSettings.yellow.appearanceProb + bugSettings.red.appearanceProb ){\n            color = \"red\" \n          } else\n          if (colorRand > bugSettings.yellow.appearanceProb + bugSettings.red.appearanceProb && colorRand <= bugSettings.yellow.appearanceProb + bugSettings.red.appearanceProb + bugSettings.orange.appearanceProb ){\n            color = \"orange\" \n          }else\n          if (colorRand > bugSettings.yellow.appearanceProb + bugSettings.red.appearanceProb + bugSettings.orange.appearanceProb  ){\n            color = \"grey\" \n          }\n          let newBug = {\n            id: Date.now(),\n            timeAppeared: Date.now(),\n            timeToStayUp: 2500 + Math.floor(Math.random() * 500), \n            color: color,\n            state: 0,\n            x: newBugPosition[0],\n            y: newBugPosition[1],\n            progress: 0,\n            progressSafeTarget: target - safetyLength,\n            progressTarget: target,\n            treated: false,\n            timeTreated: false\n          }\n          newBug.variant = newBug.color === \"grey\" ? \"\" : Math.ceil(Math.random() * 2)\n          newbugs.push(newBug)\n          lastCheckRef.current = Date.now()\n\n        }\n\n      }\n      \n      \n\n\n    } else {\n      //console.log(\"no bug\")\n      //console.log(lastCheckRef.current)\n    }\n\n\n\n    newbugs = newbugs.map(b => {\n      if (squashed.filter(s => s[0] === b.id)[0] && !b.timeSquashed) {\n        b.timeSquashed = squashed.filter(s => s[0] === b.id)[0][1]\n\n        b.state = 3\n      } else\n      if (b.state === 0 && Date.now() - b.timeAppeared > timeToRise) {\n        b.state = 1\n      } else\n      if (b.state === 1 && Date.now() - b.timeAppeared > timeToRise + b.timeToStayUp) {\n        b.state = 2\n      } else\n      if (b.state === 2 && Date.now() - b.timeAppeared  > timeToRise + b.timeToStayUp + timeToFall) {\n        b.state = 4\n      } else\n      if (b.state === 3 && Date.now() - b.timeSquashed  >  timeToFallSquashed) {\n        b.state = 4\n      } \n      \n      if (b.progress >= 1 && b.progress < 999) {\n          b.progress = 999\n      } else\n      if (b.treated && b.progress < 999) {\n        b.progress = b.progress + (Date.now() - b.timeTreated)/progressMaxTime\n        b.timeTreated = Date.now()\n      }\n      \n      return b\n    })\n    let missedCount = newbugs.filter(b => b.state === 4 && bugSettings[b.color].treatable > 0 && !b.cured).length\n    if (missedCount && soundOn) phit()\n\n    setExtraTime(extraTime + missedCount * 200)\n    setRewardCount(rewardCount - missedCount)\n\n    newbugs = newbugs.filter(b => b.state < 4)\n    setBugs(newbugs)\n  }\n\n  useEffect(() => { \n    if (soundOn && !isPlaying) {\n      music()\n    } else if (!soundOn) {\n      stop()\n    }\n    return () => stop()\n  },[music,isPlaying,stop,soundOn,sound])\n\n\n  useEffect(() => {\n    \n\n    const animationCheck = () => {\n      bugCheck()      \n    }\n\n    requestRef.current = setInterval(animationCheck,animateEvery)\n\n    return () => clearInterval(requestRef.current)\n  }\n  // eslint-disable-next-line\n  ,[bugs])\n\n  const calcHeight = (b) => {\n    if (b.state === 0) {\n      return 100 * (Date.now() - b.timeAppeared) / timeToRise + \"%\"\n    } else\n    if (b.state === 1) {\n      return \"100%\"\n    } else\n    if (b.state === 2) {\n      return 100 - (100 * (Date.now() - (b.timeAppeared + timeToRise + b.timeToStayUp)) / timeToFall) + \"%\"\n    } else\n    if (b.state === 3) {\n      let startState = 1\n      if (b.timeSquashed - b.timeAppeared < timeToRise) {\n        startState = (b.timeSquashed - b.timeAppeared)/timeToRise\n      } else\n      if (b.timeSquashed - b.timeAppeared > timeToRise + b.timeToStayUp){\n        startState = (b.timeSquashed - b.timeAppeared - (timeToRise + b.timeToStayUp))/timeToFallSquashed\n      }\n      console.log(startState)\n      return 100 * (startState - ((Date.now() - b.timeSquashed )/ timeToFallSquashed)) + \"%\"\n    } else\n    if (b.state === 4) {\n      return \"0%\"\n    }\n  }\n\n  useEffect(() => {\n\n    const handleUserKeyPress = (e) => {\n\n      if (e.keyCode === 32) {\n        setCurrentTreatment(currentTreatment === 1 ? 2 : 1)\n      }\n    }\n\n\n  \n    \n    window.addEventListener('keydown', handleUserKeyPress);\n\n  \n    return () => {\n      window.removeEventListener('keydown', handleUserKeyPress)\n\n    }\n  },[currentTreatment,setCurrentTreatment])\n\n  \n\n\n \n\n  return (\n    <>\n          <h1>BASH THE BACTERIA</h1>\n      <SafetyBar bugs={bugs} />\n      <div id=\"scorebar\">\n        <div id=\"timer\">\n        {Math.floor(timer)}\n        </div>\n        \n        </div>\n\n        <div id=\"bugboxcontainer\">\n        <RewardBar rewardCount={rewardCount} />\n\n        <div id=\"bugbox\">\n\n          {bugs.map(b => {\n            return <div\n            id={b.id}\n            key={b.id}\n          style={{\n            position: \"absolute\",\n            bottom: 100 - b.y + \"%\",\n            width: 12.5 + \"%\",\n            height: 12.5 + \"%\",\n            left:  b.x + \"%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n\n            justifyContent: \"end\"\n\n          }} \n          disabled={b.state > 2}\n          onTouchCancel={handleMouseLeave}\n          onTouchEnd={handleMouseUp}\n          onTouchStart={handleMouseDown}\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseLeave}\n          onContextMenu={handleMouseLeave}\n          ><div \n          id={b.id}\n\n          style={{\n            width: 100 * (b.progress < 999 ? 1-b.progressTarget + b.progressTarget  * (1-b.progress) : b.progressTarget ) + \"%\",\n            height: 100 * (b.progress < 999 ? 1-b.progressTarget  + b.progressTarget  * (1-b.progress) : b.progressTarget ) + \"%\",\n\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"end\"\n          }}\n          >\n            <div\n          id={b.id}\n\n          style={{\n            width: \"100%\",\n            overflow: \"hidden\",\n            height: calcHeight(b),\n            backgroundImage: `url(${bugimages[b.color + b.variant]})`,\n            backgroundPosition: 'top',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat'\n          }}  \n          ></div>\n          </div>\n          </div>\n\n          })}\n        </div>\n        <NaughtyBar maxExtraTime={maxExtraTime} extraTime={extraTime} />\n        \n        <BugGuidance messagePool={messagePool} bugimages={bugimages} currentRound={currentRound} currentTreatment={currentTreatment} setCurrentTreatment={setCurrentTreatment}/>\n        \n        </div>\n      </>\n        \n\n  )\n}\n\nexport default GameScreen","export default __webpack_public_path__ + \"static/media/laser1.b17a6cd2.mp3\";","export default __webpack_public_path__ + \"static/media/phit.95a24661.mp3\";","export default __webpack_public_path__ + \"static/media/music.45a268ab.mp3\";","import './App.css';\nimport { useEffect, useState } from 'react'\nimport StartScreen from './components/startScreen.jsx'\nimport RoundScreen from './components/roundScreen.jsx'\nimport EndScreen from './components/endScreen.jsx'\nimport GameScreen from './components/gameScreen.jsx'\nimport { VolumeOff, VolumeUp } from '@material-ui/icons';\nimport ReactGA from 'react-ga';\nimport useSound from 'use-sound';\n\nimport laser1Sfx from './sounds/laser1.mp3';\nimport phitSfx from './sounds/phit.mp3';\nimport musicSfx from './sounds/music.mp3';\n\n\n\n\n\nconst parse = require('csv-parse')\n\n\nconst App = () => {\n\n  ReactGA.initialize('UA-214460310-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n\n  const [laser1] = useSound(laser1Sfx);\n  const [phit] = useSound(phitSfx);\n  const [music, { stop, isPlaying, sound }] = useSound(musicSfx)\n\n  const [score, setScore] = useState(0);\n  const [extraTime, setExtraTime] = useState(0);\n  const [rewardCount,setRewardCount] = useState(0)\n  const [currentRound,setCurrentRound] = useState(0)\n  const [roundScores,setRoundScores] = useState([\n    {complete: 0, time: 0, bugs: 0},\n    {complete: 0, time: 0, bugs: 0},\n    {complete: 0, time: 0, bugs: 0},\n    {complete: 0, time: 0, bugs: 0}\n  ])\n  const [soundOn,setSoundOn] = useState(true)\n  const [bugs, setBugs] = useState([]);\n  const [currentTreatment, setCurrentTreatment] = useState(1);\n\n  const [gameState, setGameState] = useState(0)\n  const [timerStart,setTimerStart] = useState(0)\n  const [timer,setTimer] = useState(0)\n  const [messagePool,setMessagePool] = useState(0)\n  const [squashed,setSquashed] = useState([])\n\n  const roundLength = 60\n  const maxExtraTime = 3000\n  const startGame = () => {\n    setCurrentRound(1)\n    setGameState(1)\n  }\n\n  const [bugSettings,setBugSettings] = useState({\n    yellow: { appearanceProb: 0.9, treatable: 1 },\n    red: { appearanceProb: 0.1, treatable:  0 },\n    orange: { appearanceProb: 0, treatable: -1 },\n    grey: {appearanceProb: 0, treatable: -1},\n  })\n\n  const nextRound = () => {\n    setBugs([])\n    setGameState(2)\n    setScore(0)\n    setExtraTime(0)\n    setTimerStart(Date.now())\n    setTimer(0)\n    setCurrentTreatment(1)\n    setRewardCount(0)\n    if (currentRound === 1) {\n      setBugSettings({\n        yellow: { appearanceProb: 0.9, treatable: 1 },\n        red: { appearanceProb: 0.1, treatable:  0 },\n        orange: { appearanceProb: 0, treatable: -1 },\n        grey: {appearanceProb: 0, treatable: -1},\n      })\n    } else\n    if (currentRound === 2) {\n      setBugSettings({\n        yellow: { appearanceProb: 0.5, treatable: 1 },\n        red: { appearanceProb: 0.5, treatable:  0 },\n        orange: { appearanceProb: 0, treatable: -1 },\n        grey: {appearanceProb: 0, treatable: -1},\n      })\n    } else\n    if (currentRound === 3) {\n      setBugSettings({\n        yellow: { appearanceProb: 0.45, treatable: 1 },\n        red: { appearanceProb: 0.45, treatable:  2 },\n        orange: { appearanceProb: 0.1, treatable: 0 },\n        grey: {appearanceProb: 0, treatable: -1},\n      })\n    } else\n    if (currentRound === 4) {\n      setBugSettings({\n        yellow: { appearanceProb: 0.3, treatable: 1 },\n        red: { appearanceProb: 0.3, treatable:  2 },\n        orange: { appearanceProb: 0.3, treatable: 3 },\n        grey: {appearanceProb: 0.1, treatable: 0},\n      })\n    }\n  }\n\n  const restartGame = () => {\n    setGameState(0)\n    setScore(0)\n    setSquashed([])\n    setBugs([])\n  }\n\n  const displayGameState = (gameState) => {\n    if (gameState === 0) {\n      return <StartScreen messagePool={messagePool} startGame={startGame} />\n    } else\n    if (gameState === 1) {\n      return <RoundScreen roundScores={roundScores} messagePool={messagePool} currentRound={currentRound} nextRound={nextRound} />\n    } else\n    if (gameState === 2) {\n      return <GameScreen laser1={laser1} phit={phit} music={music} stop={stop} isPlaying={isPlaying} sound={sound} messagePool={messagePool} currentRound={currentRound} currentTreatment={currentTreatment} setCurrentTreatment={setCurrentTreatment}  maxExtraTime={maxExtraTime} bugSettings={bugSettings} rewardCount={rewardCount} setRewardCount={setRewardCount} extraTime={extraTime} setExtraTime={setExtraTime} squashed={squashed} setSquashed={setSquashed} bugs={bugs} setBugs={setBugs} soundOn={soundOn}  timer={timer} score={score} setScore={setScore}  />\n    } else {\n      return <EndScreen roundScores={roundScores} messagePool={messagePool} restartGame={restartGame} />\n    }\n  }\n\n  useEffect(() => {\n    let timeout\n    if (gameState === 2 && extraTime >= maxExtraTime && currentRound === 4) {\n      setGameState(3)\n    } else \n    if (gameState === 2 && extraTime >= maxExtraTime) {\n      setGameState(1)\n      setRoundScores(roundScores => {\n        let newScores = [...roundScores]\n        newScores[currentRound - 1].bugs = score\n        newScores[currentRound - 1].complete = 1\n        newScores[currentRound - 1].time = timer\n        return newScores\n      })\n      setCurrentRound(currentRound + 1)\n    } else\n    if (gameState === 2 && timer > roundLength && currentRound === 4) {\n      setGameState(3)\n      setRoundScores(roundScores => {\n        let newScores = [...roundScores]\n        newScores[currentRound - 1].bugs = score\n        newScores[currentRound - 1].complete = 1\n        newScores[currentRound- 1].time = roundLength\n        return newScores\n      })\n    } else \n    if (gameState === 2 && timer > roundLength) {\n      setGameState(1)\n      setRoundScores(roundScores => {\n        let newScores = [...roundScores]\n        newScores[currentRound - 1].bugs = score\n        newScores[currentRound - 1].complete = 1\n        newScores[currentRound- 1].time = roundLength\n        return newScores\n      })\n      setCurrentRound(currentRound + 1)\n    } else \n    if (gameState === 2) {\n      timeout = setTimeout(() => {\n        setTimer((Date.now()-timerStart)/1000)\n      }, 100);\n    }\n    \n    return () => clearTimeout(timeout);\n\n  },[timerStart,timer,setTimer,gameState,extraTime,currentRound,score])\n\n\n  useEffect(() => {\n    if (!messagePool) {\n\n      const loadMessageData = (parser,data) => {\n        data.split(\"\\n\").forEach(d => \n          parser.write(d)\n        )\n      }\n        \n      let messages = {}\n      const parser = parse({\n        delimiter: ','\n      })\n\n      parser.on('readable', function(){\n        let record\n        // eslint-disable-next-line\n        while (record = parser.read()) {\n\n          let type = record[0]\n          if (!messages[`${type}Messages`]){\n            messages[`${type}Messages`] = []\n          }\n          messages[`${type}Messages`].push([record[1],record[2],record[3]])\n        }\n      })\n  \n      parser.on('error', function(err){\n        console.error(err.message)\n      })\n\n      const csvurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9xqpcP13MczJVdD1VVa_CMtHrOM8IeV_Gtt3PebY3kbiueG4R1l6y0H1-ydpoRFL_hhxJay0Wmvbi/pub?gid=0&single=true&output=csv\"\n      fetch(csvurl).then((response) => {\n        return response.text();\n      })\n      .then((csvdata) => {\n        \n        loadMessageData(parser,csvdata)\n        parser.end()\n        setMessagePool(messages)\n\n        \n      })\n    }\n  },[messagePool,setMessagePool])\n  const soundToggle = () => {\n    setSoundOn(soundOn ? false : true)\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"container\">\n      \n        {messagePool ? displayGameState(gameState) : \"\"}\n          <div id=\"volumecontrol\" onClick={soundToggle}>\n        {\n          soundOn ?  <VolumeUp /> : <VolumeOff />\n        }\n\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}